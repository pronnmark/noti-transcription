@import 'tailwindcss';

@layer theme {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer utilities {
  /* Custom color utilities for shadcn/ui */
  @property --color-background { syntax: '<color>'; inherits: true; initial-value: hsl(var(--background)); }
  @property --color-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--foreground)); }
  @property --color-card { syntax: '<color>'; inherits: true; initial-value: hsl(var(--card)); }
  @property --color-card-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--card-foreground)); }
  @property --color-popover { syntax: '<color>'; inherits: true; initial-value: hsl(var(--popover)); }
  @property --color-popover-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--popover-foreground)); }
  @property --color-primary { syntax: '<color>'; inherits: true; initial-value: hsl(var(--primary)); }
  @property --color-primary-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--primary-foreground)); }
  @property --color-secondary { syntax: '<color>'; inherits: true; initial-value: hsl(var(--secondary)); }
  @property --color-secondary-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--secondary-foreground)); }
  @property --color-muted { syntax: '<color>'; inherits: true; initial-value: hsl(var(--muted)); }
  @property --color-muted-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--muted-foreground)); }
  @property --color-accent { syntax: '<color>'; inherits: true; initial-value: hsl(var(--accent)); }
  @property --color-accent-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--accent-foreground)); }
  @property --color-destructive { syntax: '<color>'; inherits: true; initial-value: hsl(var(--destructive)); }
  @property --color-destructive-foreground { syntax: '<color>'; inherits: true; initial-value: hsl(var(--destructive-foreground)); }
  @property --color-border { syntax: '<color>'; inherits: true; initial-value: hsl(var(--border)); }
  @property --color-input { syntax: '<color>'; inherits: true; initial-value: hsl(var(--input)); }
  @property --color-ring { syntax: '<color>'; inherits: true; initial-value: hsl(var(--ring)); }

  /* Base styles */
  * {
    border-color: var(--color-border);
  }
  
  body {
    background-color: var(--color-background);
    color: var(--color-foreground);
  }

  /* shadcn/ui color utilities */
  .bg-background { background-color: var(--color-background); }
  .bg-foreground { background-color: var(--color-foreground); }
  .bg-card { background-color: var(--color-card); }
  .bg-popover { background-color: var(--color-popover); }
  .bg-primary { background-color: var(--color-primary); }
  .bg-secondary { background-color: var(--color-secondary); }
  .bg-muted { background-color: var(--color-muted); }
  .bg-accent { background-color: var(--color-accent); }
  .bg-destructive { background-color: var(--color-destructive); }
  
  .text-foreground { color: var(--color-foreground); }
  .text-card-foreground { color: var(--color-card-foreground); }
  .text-popover-foreground { color: var(--color-popover-foreground); }
  .text-primary-foreground { color: var(--color-primary-foreground); }
  .text-secondary-foreground { color: var(--color-secondary-foreground); }
  .text-muted-foreground { color: var(--color-muted-foreground); }
  .text-accent-foreground { color: var(--color-accent-foreground); }
  .text-destructive-foreground { color: var(--color-destructive-foreground); }
  
  .border-border { border-color: var(--color-border); }
  .border-input { border-color: var(--color-input); }
  
  .ring-ring { --tw-ring-color: var(--color-ring); }

  /* Radius utilities */
  .rounded-lg { border-radius: var(--radius); }
  .rounded-md { border-radius: calc(var(--radius) - 2px); }
  .rounded-sm { border-radius: calc(var(--radius) - 4px); }
}