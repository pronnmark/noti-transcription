# Node environment
NODE_ENV=development

# File storage directory
DATA_DIR=./data

# ==========================================
# Authentication Configuration
# ==========================================
# Set a secure password for accessing the application
# This protects the entire application behind a simple password
AUTH_PASSWORD=noti2024

# ==========================================
# DDwrappy - Claude Code OpenAI API Wrapper
# ==========================================
# DDwrappy provides OpenAI-compatible API access to Claude Code locally.
# No external API keys required. Falls back to other providers if needed.

# DEFAULT: DDwrappy Configuration (Local Claude Code Wrapper)
CUSTOM_AI_BASE_URL=http://localhost:8000/v1
CUSTOM_AI_API_KEY=not-needed
CUSTOM_AI_MODEL=claude-sonnet-4-20250514
CUSTOM_AI_PROVIDER=ddwrappy

# ==========================================
# DDwrappy Setup Instructions
# ==========================================
# 1. Start DDwrappy container: docker-compose up -d ddwrappy
# 2. Verify health: curl http://localhost:8000/health
# 3. Test API: curl http://localhost:8000/v1/models
# 4. Management: ./manage.sh status|start|stop|restart|logs
#
# Supported Claude Models (recommended order):
# - claude-sonnet-4-20250514 (‚≠ê Recommended - Most balanced)
# - claude-opus-4-20250514 (Most capable, slower)
# - claude-3-7-sonnet-20250219 (Extended context)
# - claude-3-5-sonnet-20241022 (Fast, balanced)
# - claude-3-5-haiku-20241022 (Fastest responses)
#
# Advanced DDwrappy Features:
# - Session continuity with session_id parameter
# - Tool access via X-Claude-Allowed-Tools header
# - No authentication required by default
# - Full OpenAI SDK compatibility

# ==========================================
# Alternative Provider Configurations
# ==========================================

# ALTERNATIVE: OpenAI Configuration
# CUSTOM_AI_BASE_URL=https://api.openai.com/v1
# CUSTOM_AI_API_KEY=sk-your-openai-api-key-here
# CUSTOM_AI_MODEL=gpt-3.5-turbo
# CUSTOM_AI_PROVIDER=openai

# ALTERNATIVE: Anthropic Claude Configuration
# CUSTOM_AI_BASE_URL=https://api.anthropic.com/v1
# CUSTOM_AI_API_KEY=claude-your-anthropic-api-key
# CUSTOM_AI_MODEL=claude-3-sonnet-20240229
# CUSTOM_AI_PROVIDER=anthropic

# ALTERNATIVE: OpenRouter Configuration (Access to multiple models)
# CUSTOM_AI_BASE_URL=https://openrouter.ai/api/v1
# CUSTOM_AI_API_KEY=sk-or-your-openrouter-key
# CUSTOM_AI_MODEL=anthropic/claude-3-sonnet
# CUSTOM_AI_PROVIDER=openrouter

# ALTERNATIVE: Local Model Configuration (LM Studio, Ollama, etc.)
# CUSTOM_AI_BASE_URL=http://localhost:1234/v1
# CUSTOM_AI_API_KEY=not-required-for-local
# CUSTOM_AI_MODEL=llama-3.1-8b-instruct
# CUSTOM_AI_PROVIDER=local

# ALTERNATIVE: Azure OpenAI Configuration
# CUSTOM_AI_BASE_URL=https://your-resource.openai.azure.com/openai/deployments/your-deployment
# CUSTOM_AI_API_KEY=your-azure-openai-key
# CUSTOM_AI_MODEL=gpt-35-turbo
# CUSTOM_AI_PROVIDER=azure

# ==========================================
# Audio Processing Configuration
# ==========================================

# HuggingFace token for speaker diarization (required for multi-speaker detection)
# Get your token from: https://huggingface.co/settings/tokens
HUGGINGFACE_TOKEN=hf_your-huggingface-token-here

# ==========================================
# Popular Model Examples by Provider
# ==========================================
# DDwrappy (Claude via local wrapper): claude-sonnet-4-20250514, claude-opus-4-20250514, claude-3-5-sonnet-20241022, claude-3-5-haiku-20241022
# OpenAI: gpt-3.5-turbo, gpt-4, gpt-4-turbo, gpt-4o
# Anthropic: claude-3-haiku-20240307, claude-3-sonnet-20240229, claude-3-opus-20240229  
# OpenRouter: anthropic/claude-3-sonnet, openai/gpt-4, meta-llama/llama-3.1-70b-instruct
# Local: llama-3.1-8b-instruct, mixtral-8x7b-instruct, codellama-34b-instruct